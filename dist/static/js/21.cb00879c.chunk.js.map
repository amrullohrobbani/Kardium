{"version":3,"sources":["views/Users/User.js","views/Store/Actions/leadActions.js"],"names":["User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","preventDefault","handleLeadsStorage","target","value","handleSubmit","pinned","patient","find","user","id","toString","match","params","setState","pinnedStatus","state","onUnload","pos","_this2","timerId","clearTimeout","setTimeout","startIndex","endIndex","_this3","_this$props","leads","react_default","a","createElement","react","fallback","className","Row","Col","lg","Card","CardHeader","CardBody","Table","responsive","striped","hover","email","firstName","lastName","Button","block","color","onClick","xs","md","Input","type","name","onChange","records","map","key","es6","width","height","data","margin","top","right","left","bottom","dataKey","domain","stroke","e","updateBrush","tick","dot","isAnimationActive","Component","compose","connect","console","log","lead","firestore","ordered","patients","profile","firebase","dispatch","changeEvent","getState","_ref2","getFirebase","link","ekg","ecg","storage","ref","child","getDownloadURL","then","url","fetch","response","text","split","x","length","i","charAt","push","I","slice","II","III","aVL","aVR","aVF","V1","V2","V3","V4","V5","V6","catch","err","_ref3","getFirestore","collection","doc","update","firestoreConnect"],"mappings":"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","file":"static/js/21.cb00879c.chunk.js","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Button, Card, CardBody, CardHeader, Col, Input, Row, Table } from 'reactstrap';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Brush } from 'recharts';\nimport { connect } from 'react-redux';\nimport { handleLeadsStorage, pinnedStatus } from '../Store/Actions/leadActions';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass User extends Component {\nconstructor(props){\n  super(props);\n  this.state={\n    pinned : null,\n    id:''\n  }\n}\n\n\n   componentWillUnmount() {\n     this.props.onUnload();\n   }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.props.handleLeadsStorage(event.target.value);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const pinned = this.props.patient.find( user => user.id.toString() === this.props.match.params.id).pinned\n    const id = this.props.patient.find( user => user.id.toString() === this.props.match.params.id).id\n    if (pinned === true){\n      this.setState({ pinned : false, id : id }, function(){this.props.pinnedStatus(this.state)})\n    } else {\n      this.setState({ pinned : true , id : id }, function(){this.props.pinnedStatus(this.state)})\n    }\n  }\n\n  updateBrush(pos) {\n    if (this.state.timerId !== 0) {\n      clearTimeout(this.timerId)\n    }\n    this.state.timerId = setTimeout(() => {\n      this.setState({ startIndex: pos.startIndex, endIndex: pos.endIndex })\n    }, 100000)\n  }\n\n\n  render() {\n    const { leads, patient } = this.props;\n      if (!patient) return <Suspense fallback={<div>Loading...</div>}></Suspense>\n      const user = patient.find( user => user.id.toString() === this.props.match.params.id)\n\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col lg={6}>\n            <Card>\n              <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i>User id: {this.props.match.params.id}</strong>\n              </CardHeader>\n              <CardBody>\n                  <Table responsive striped hover>\n                    <tbody>\n                        <tr>\n                          <td>E - Mail</td>\n                          <td><strong>{user.email}</strong></td>\n                        </tr>\n                        <tr>\n                          <td>Name</td>\n                          <td><strong>{user.firstName} {user.lastName}</strong></td>\n                        </tr>\n                        <tr>\n                          <td> Status </td>\n                          <td> {user.pinned === true ?\n                            <Col>\n                              <Button block color=\"ghost-success\" onClick={this.handleSubmit}>Pinned</Button>\n                            </Col>:\n                            <Col>\n                              <Button block color=\"ghost-danger\" onClick={this.handleSubmit}>Unpinned</Button>\n                            </Col>} </td>\n                        </tr>\n                        <tr>\n                          <td> Waktu Penggunaan </td>\n                          <td>\n                          <Col xs=\"12\" md=\"9\">\n                            <Input type=\"select\" name=\"select\" id=\"select\" onChange={this.handleChange} >\n                              <option value=\"null\">please select</option>\n                              {\n                                user.records.map( (value, key) => {\n                                  return (\n                                      <option key={key.toString()} value={value.toString()}>{value}</option>\n                                  )\n                                }\n                              )}\n                            </Input>\n                          </Col>\n                          </td>\n                        </tr>\n                    </tbody>\n                  </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          <Card>\n            <CardHeader>\n                <strong><i className=\"icon-info pr-1\"></i> ECG Result</strong>\n            </CardHeader>\n            <CardBody>\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                  <Line type=\"monotone\" dataKey=\"I\" dot={false} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"I\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']}/>\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"II\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"II\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"III\" dot={false} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"III\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"aVF\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"aVF\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"aVL\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"aVL\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis  domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"aVR\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"aVR\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"V1\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"V1\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"V2\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"V2\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"V3\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"V3\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                <YAxis domain={['dataMin', 'dataMax']} />\n                  <Line type=\"monotone\" dataKey=\"V4\" dot={false} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"V4\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"V5\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"V5\" stroke=\"#8884d8\" dot={false} />\n            </LineChart>\n\n            <LineChart width={1000} height={250} data={this.props.leads}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n              <XAxis dataKey=\"Time\" />\n              <Tooltip />\n              <YAxis domain={['dataMin', 'dataMax']} />\n              <Legend />\n              <Brush dataKey='I' height={30} stroke=\"#8884d8\" onChange={(e) => this.updateBrush(e)} startIndex={this.state.startIndex} endIndex={this.state.endIndex} tick={true}>\n                <LineChart data={this.props.leads}              >\n                  <Line type=\"monotone\" dataKey=\"V6\" dot={false} />\n                  <YAxis domain={['dataMin', 'dataMax']} />\n                </LineChart>\n              </Brush>\n              <Line type=\"monotone\" dataKey=\"V6\" stroke=\"#8884d8\" dot={false} isAnimationActive={true}/>\n            </LineChart>\n            </CardBody>\n          </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    leads : state.lead.leads,\n    patient : state.firestore.ordered.patients,\n    profile : state.firebase.profile\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleLeadsStorage: (event) => dispatch(handleLeadsStorage(event)),\n    onUnload: () => dispatch({ type: 'UNLOADED' }),\n    pinnedStatus : (event) => dispatch(pinnedStatus(event))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection : 'patients' }\n  ])\n)(User);\n","export const handleLeads = (changeEvent) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    let ref = firebase.ref().child(changeEvent)\r\n    let ecg = [];\r\n    console.log(ref)\r\n    ref.once('value', (snap) => {\r\n      let leads = snap.val();\r\n      let i=0;\r\n        for (let key in leads ) {\r\n          if (i%10 !== 0){\r\n            i++;\r\n          } else {\r\n          ecg.push({\r\n            Time: leads[key].Time,\r\n            I: leads[key].I,\r\n            II: leads[key].II,\r\n            III: leads[key].III,\r\n            aVL: leads[key].aVL,\r\n            aVR: leads[key].aVR,\r\n            aVF: leads[key].aVF,\r\n            V1: leads[key].V1,\r\n            V2: leads[key].V2,\r\n            V3: leads[key].V3,\r\n            V4: leads[key].V4,\r\n            V5: leads[key].V5,\r\n            V6: leads[key].V6,\r\n          })\r\n          i++;\r\n          }\r\n        }\r\n        console.log(ecg)\r\n      }\r\n    ).then(()=>{\r\n      dispatch({ type : 'HANDLELEAD_SUCCESS', changeEvent, ecg })\r\n    }).catch((err) => {\r\n      dispatch({ type : 'HANDLELEAD_FAILED', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const handleLeadsStorage = (changeEvent) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    let link = changeEvent + \".txt\"\r\n    let ekg = []\r\n    let data = ''\r\n    let ecg = []\r\n    let ref = firebase.storage()\r\n      .ref()\r\n      .child(link)\r\n      .getDownloadURL()\r\n      .then((url) => fetch(url)\r\n      .then((response) => response.text())\r\n      .then((response) => data = response)\r\n      .then((response) =>\r\n        ecg = response.split(\"\\n\")))\r\n      .then((response) => {\r\n        let x = response.length;\r\n        for (let i = 0; i < x ; i++) {\r\n          if (i%10 === 0){\r\n            switch (ecg[i].charAt(1)) {\r\n              case 'A':\r\n                  ekg.push({\r\n                    I: ecg[i].slice(2)\r\n                  })\r\n                  break;\r\n              case 'B':\r\n                  ekg.push({\r\n                    II: ecg[i].slice(2)\r\n                  })\r\n                  break;\r\n              case 'C':\r\n                  ekg.push({\r\n                    III: ecg[i].slice(2)\r\n                  })\r\n                  break;\r\n              case 'D':\r\n                  ekg.push({\r\n                    aVL: ecg[i].slice(2)\r\n                  })\r\n                  break;\r\n              case 'E':\r\n                  ekg.push({\r\n                    aVR: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'F':\r\n                  ekg.push({\r\n                    aVF: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'G':\r\n                  ekg.push({\r\n                    V1: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'H':\r\n                  ekg.push({\r\n                    V2: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'I':\r\n                  ekg.push({\r\n                    V3: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'J':\r\n                    ekg.push({\r\n                    V4: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'K':\r\n                  ekg.push({\r\n                    V5: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n              case 'L':\r\n                  ekg.push({\r\n                    V6: ecg[i].slice(2)\r\n                    })\r\n                    break;\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .then((response) => {\r\n      dispatch({ type : 'HANDLELEADSTORAGE_SUCCESS', ekg})\r\n    }).catch((err) => {\r\n      dispatch({ type : 'HANDLELEAD_FAILED', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const pinnedStatus = (event) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    const firestore = getFirestore();\r\n    console.log(event.pinned);\r\n    if (event.pinned === true){\r\n      firestore.collection('patients').doc(event.id).update({\r\n        pinned:true\r\n      }).then(()=> {\r\n        dispatch({ type : 'CHANGE_PIN_STATUS'})\r\n      }).catch((err) => {\r\n        dispatch({ type : 'CHANGE_PIN_FAILED', err })\r\n      })\r\n    } else {\r\n      firestore.collection('patients').doc(event.id).update({\r\n        pinned:false\r\n      }).then(()=> {\r\n        dispatch({ type : 'CHANGE_PIN_STATUS'})\r\n      }).catch((err) => {\r\n        dispatch({ type : 'CHANGE_PIN_FAILED', err })\r\n      })\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}